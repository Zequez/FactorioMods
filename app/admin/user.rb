ActiveAdmin.register User do
  permit_params :email, :password, :password_confirmation, :is_dev, :slug

  controller do
    def scoped_collection
      User.includes(:owned_mods, :authored_mods)
    end
  end

  member_action :validate, method: :put do
    resource.validate!
    render json: {}
  end

  member_action :give_ownership, method: :put do
    resource.give_ownership_of_authored!
    render json: {}
  end

  scope :for_validation

  index do
    selectable_column
    id_column
    column :email
    column :name
    column :current_sign_in_at
    column :sign_in_count
    column :created_at
    column :is_dev
    column :is_admin
    column :autogenerated
    column :owned_mods do |user|
      user.owned_mods.map{ |m| link_to m.name, m }.join('<br/>').html_safe
    end
    column :authored_mods do |user|
      user.owned_mods.map{ |m| link_to m.name, m }.join('<br/>').html_safe
    end
    column :validate do |user|
      # Doesn't actually toggle, it's just a one way trip
      toggler_status_tag validate_admin_user_path(user), user.is_dev
    end
    column :give_ownership do |user|
      # Doesn't actually toggle, it's just a one way trip
      toggler_status_tag give_ownership_admin_user_path(user), user.is_dev
    end
    actions
  end

  filter :email
  filter :name
  filter :is_dev
  filter :is_admin
  filter :autogenerated
  filter :created_at

  form do |f|
    f.inputs do
      f.input :email
      f.input :name
      f.input :password
      f.input :password_confirmation
      f.input :is_dev
      f.input :slug
    end
    f.actions
  end

end
