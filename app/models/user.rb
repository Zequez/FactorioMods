require 'securerandom'

class User < ActiveRecord::Base
  extend FriendlyId

  # Include default devise modules. Others available are:
  # :confirmable, :lockable, :timeoutable and :omniauthable
  devise :database_authenticatable, :registerable,
         :recoverable, :rememberable, :trackable, :validatable

  friendly_id :name, use: [:slugged, :finders]

  has_many :mods, dependent: :nullify, foreign_key: :author_id
  has_many :authors_mods, dependent: :destroy, foreign_key: :author_id
  has_many :authored_mods, through: :authors_mods, class_name: 'Mod', source: :mod
  has_many :owned_mods, class_name: 'Mod', foreign_key: :author_id, dependent: :nullify # We'll change it to User#owner_id eventually

  def is_registered?
    !new_record?
  end

  def is_guest?
    new_record?
  end

  validates :name, presence: true, format: { with: /\A[A-Z0-9\-_]+\Z/i }, uniqueness: { case_sensitive: false }

  def self.autogenerate(name)
    random_email = SecureRandom.hex(25) + '@' + SecureRandom.hex(25) + '.com'
    random_password = SecureRandom.hex(25)
    User.new(name: name, email: random_email, password: random_password, autogenerated: true)
  end
end
